name: Docker Image CI 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ECR_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Set up image tag
      id: vars
      run: echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
    

    - name: Build and push versioned image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: wiz-demo-ecr
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

    - name: Temporarily make ECR repo mutable
      run: |
        aws ecr put-image-tag-mutability \
          --repository-name wiz-demo-ecr \
          --image-tag-mutability MUTABLE \
          --region us-east-2
          
    - name: Un-tag prevous 'latest' image (if exists)
      env: 
        AWS_REGION: us-east-2
        ECR_REPOSITORY: wiz-demo-ecr
      run: |
        set -e
        IMAGE_DIGEST=$(aws ecr batch-get-image \
          --repository-name $ECR_REPOSITORY \
          --image-ids imageTag=latest \
          --query 'images[0].imageId.imageDigest' \
          --output text || true)

        if [ "$IMAGE_DIGEST" != "None" ] && [ -n "$IMAGE_DIGEST" ]; then
          echo "Removing 'latest' tag from digest: $IMAGE_DIGEST"
          aws ecr batch-delete-image \
            --repository-name $ECR_REPOSITORY \
            --image-ids "[{\"imageDigest\":\"$IMAGE_DIGEST\",\"imageTag\":\"latest\"}]"
        else
          echo "No previous 'latest' tag found."
        fi
    - name: Tag new image as latest and push
      env: 
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: wiz-demo-ecr
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
      run: |
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest


    - name: Re-enable tag immutability
      run: | 
        aws ecr put-image-tag-mutability \
          --repository-name wiz-demo-ecr \
          --image-tag-mutability IMMUTABLE \
          --region us-east-2
          
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
  
    - name: Update kube config
      run: aws eks update-kubeconfig --name privateEKSCluster --region us-east-2

    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s/private-eks-deployment.yaml

    
    
        

